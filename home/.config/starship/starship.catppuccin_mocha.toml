# ~/.config/starship.toml

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

command_timeout = 1000
add_newline = true

format = """
[╭─](rosewater)\
    [【](flamingo)\
      $username\
      [ @ ](flamingo)\
      $hostname \
      $directory \      
    [】](flamingo)
[│](rosewater)\
    $git_branch\
    $git_status\
    $package\
    $python\
    $nodejs\    
    $custom
[╰─](rosewater)\
    $memory_usage\
    $time\
    $cmd_duration \    
    $shell\
    $character\
"""

palette = "catppuccin_mocha"

[shell]
powershell_indicator = "_"
bash_indicator = ""
zsh_indicator = "z_"
style = "rosewater"
disabled= false

[battery]
full_symbol = "🔋"
charging_symbol = "🔌"
discharging_symbol = "⚡"

[[battery.display]]
threshold = 30
style = "bold flamingo"

[character]
error_symbol = "[✖](bold pink) "

[cmd_duration]
min_time = 10_000
format = "took [$duration]($style)"

[directory]
truncation_length = 5
format = "[$path]($style) [$read_only]($mauve) "
truncation_symbol = "…/"
read_only = "🔒"
read_only_style = "red"

[git_branch]
format = " [$symbol$branch]($style) "
symbol = "🍣 "
style = "bold red"

[git_commit]
commit_hash_length = 8
style = "bold maroon"

[git_status]
conflicted = "⚔️ "
ahead = "🏎️ 💨 ×${count}"
behind = "🐢 ×${count}"
diverged = "🔱 🏎️ 💨 ×${ahead_count} 🐢 ×${behind_count}"
untracked = "🛤️  ×${count}"
stashed = "📦 "
modified = "📝 ×${count}"
staged = "🗃️  ×${count}"
renamed = "📛 ×${count}"
deleted = "🗑️  ×${count}"
style = "bright-white"
format = "$all_status$ahead_behind"

[username]
style_user = "bold dimmed blue"
show_always = true
format = "[$user](sky)"

[hostname]
ssh_only = false
format = "<[$hostname]($style)>"
style = "sapphire"
disabled = false

[julia]
format = "[$symbol$version]($style) "
symbol = "ஃ "
style = "bold green"

[memory_usage]
format = "$symbol[${ram}( | ${swap})]($style) "
threshold = -1
style = "lavender"
disabled = false

[package]
disabled = true

[rust]
format = "[$symbol$version]($style) "
style = "bold yellow"

[time]
time_format = "%T"
format = "🕙 $time($style) "
style = "green"
disabled = false

[nodejs]
format = " via [🤖 $version](yellow) "

[git_state]
format = '\(:[$state( $progress_current/$progress_total)]($style)\)'

[python]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($text)'

[custom.git_host]
command = """
URL=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$URL" =~ "github" ]]; then
    ICON=" "
elif [[ "$URL" =~ "gitlab" ]]; then
    ICON=" "
elif [[ "$URL" =~ "bitbucket" ]];then
    ICON=" "
elif [[ "$URL" =~ "kernel" ]];then
    ICON=" "
elif [[ "$URL" =~ "archlinux" ]];then
    ICON=" "
elif [[ "$URL" =~ "gnu" ]];then
    ICON=" "
elif [[ "$URL" =~ "git" ]];then
    ICON=" "
else
    ICON=" "
    URL="localhost"
fi
for PATTERN in "https" "http" "git" "://" "@"; do
    [[ "$URL" == "$PATTERN"* ]] && URL="${URL##$PATTERN}"
done
for PATTERN in "/" ".git"; do
    [[ "$URL" == *"$PATTERN" ]] && URL="${URL%%$PATTERN}"
done
printf "%s%s" "$ICON" "$URL"
"""
directories = [".git"]
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash","--norc","--noprofile"]
style = "subtext0"
format = " at [$output]($overlay2)"

[palettes.catppuccin_mocha]
rosewater = "#f5e0dc"
flamingo = "#f2cdcd"
pink = "#f5c2e7"
mauve = "#cba6f7"
red = "#f38ba8"
maroon = "#eba0ac"
peach = "#fab387"
yellow = "#f9e2af"
green = "#a6e3a1"
teal = "#94e2d5"
sky = "#89dceb"
sapphire = "#74c7ec"
blue = "#89b4fa"
lavender = "#b4befe"
text = "#cdd6f4"
subtext1 = "#bac2de"
subtext0 = "#a6adc8"
overlay2 = "#9399b2"
overlay1 = "#7f849c"
overlay0 = "#6c7086"
surface2 = "#585b70"
surface1 = "#45475a"
surface0 = "#313244"
base = "#1e1e2e"
mantle = "#181825"
crust = "#11111b"
