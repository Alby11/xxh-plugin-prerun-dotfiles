# vim: filetype=zsh

function mount_share() {
    if [[ $1 == "-h" ]]; then
        echo "Usage: mount_network_share -s [server] -r [share] -u [username] -d [domain] -p [protocol]"
        echo "Mounts a network share at the specified server."
        echo "Options:"
        echo "  -s    Specifies the server to connect to."
        echo "  -r    Specifies the remote share to mount."
        echo "  -u    Specifies the username (default is current session's username)."
        echo "  -d    Specifies the domain (optional)."
        echo "  -p    Specifies the protocol (default is samba, can also be nfs)."
        return
    fi

    local OPTIND opt server share username domain protocol
    while getopts "s:r:u:d:p:" opt; do
      case $opt in
        s) server="${OPTARG}" ;;
        r) share="${OPTARG}" ;;
        u) username="${OPTARG}" ;;
        d) domain="${OPTARG}" ;;
        p) protocol="${OPTARG}" ;;
      esac
    done

    # Default values
    username=${username:-$USER}
    protocol=${protocol:-cifs}

    # Input validation
    if [[ -z $server ]] || [[ -z $share ]]; then
        echo "Error: Server and share names are required."
        return 1
    fi

    # Check if server is reachable
    if ! ping -c 1 $server &> /dev/null; then
        echo "Error: Server $server is unreachable."
        return 1
    fi

    # Construct mount path
    local mount_path="${HOME}/mnt/.${server}_${share}"
    mkdir -p $mount_path

    # Mount the share
    if $(sudo mount.cifs "//${server}/${share}" "$mount_path" -o user=${username},dom=${domain}); then
        echo "Mounted $share to $mount_path successfully."
    else
        echo "Error: Failed to mount $share."
        rmdir $mount_path
        return 1
    fi


    # Use fusermount for write permissions
    local fusermount_path="${HOME}/mnt/${server}_${share}" 
    mkdir -p $fusermount_path
    # if $(fusermount -o rw,allow_other $mount_path ${fusermount_path}); then
    if $(sudo bindfs --map=root/$(whoami) "${mount_path}" "${fusermount_path}"); then
        echo "Write permissions enabled on ${fusermount_path}."
    else
        echo "Error: Failed to enable write permissions."
        rmdir $fusermount_path
        rmdir $mount_path
        return 1
    fi

    return 0
}
