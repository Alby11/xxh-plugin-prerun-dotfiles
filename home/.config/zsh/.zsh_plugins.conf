# vim: filetype=zsh

#
# .zsh_plugins.conf - Antidote plugins configuration file
#

ECHOCAT '.zsh_plugins.conf - Antidote plugins configuration file'

### PLUGINS CONFIGURATIONS
# Antidote settings
zstyle ':antidote:bundle' use-friendly-names 'yes'
zstyle ':antidote:bundle' file ${ZDOTDIR:-$HOME}/.zsh_plugins.txt

# Set omz variables prior to loading omz plugins
# see issue https://github.com/ohmyzsh/ohmyzsh/issues/11762
export ZSH=$(antidote path ohmyzsh/ohmyzsh)
export ZSH_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/oh-my-zsh"
[[ -d $ZSH_CACHE_DIR ]] || mkdir -p $ZSH_CACHE_DIR

# vi mode
# export VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true
# export VI_MODE_SET_CURSOR=true
# export MODE_INDICATOR="%F{white}+%f"
# export INSERT_MODE_INDICATOR="%F{yellow}+%f"
### Zsh Vi Mode - https://github.com/jeffreytse/zsh-vi-mode
# Only changing the escape key to `jk` in insert mode, we still
# keep using the default keybindings `^[` in other modes
export ZVM_VI_ESCAPE_BINDKEY=kj
# Change to Zsh's default readkey engine
export ZVM_READKEY_ENGINE=$ZVM_READKEY_ENGINE_NEX # Better, beta
### zsh-history-substring-search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
### zsh-history
export ZSH_HISTORY_FILE_NAME=".zsh_history"
export ZSH_HISTORY_FILE="${ZDOTDIR:-$HOME}/${ZSH_HISTORY_FILE_NAME}"
export ZSH_HISTORY_PROJ="${ZDOTDIR:-$HOME}/zsh-history"
export ZSH_HISTORY_FILE_ENC_NAME=".zsh_history.enc"
export ZSH_HISTORY_FILE_ENC="${ZSH_HISTORY_PROJ}/${ZSH_HISTORY_FILE_ENC_NAME}"
export ZSH_HISTORY_COMMIT_MSG="latest $(date)"
export HISTSIZE=1000000000
export SAVEHIST=$HISTSIZE
setopt EXTENDED_HISTORY
# per-directory-history
[[ -z $HISTORY_BASE ]] && export HISTORY_BASE="$ZDOTDIR/.directory_history"
[[ -z $HISTORY_START_WITH_GLOBAL ]] && export HISTORY_START_WITH_GLOBAL=false
[[ -z $PER_DIRECTORY_HISTORY_TOGGLE ]] && export PER_DIRECTORY_HISTORY_TOGGLE='^G'
### fzf
export FZF_PREVIEW_ADVANCED=true
export FZF_BASE="$(which fzf)"
export FZF_DEFAULT_COMMAND='rg --ignore-case --files --no-ignore-vcs --hidden '
# catppucin theme
export FZF_DEFAULT_OPTS=" --preview bat --border=rounded \
  --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
  --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
  --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 "
export LESSOPEN='| lessfilter-fzf %s'
### fzf-tab
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with eza when completing cd
if command -v eza &>/dev/null; then
  zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
else
  zstyle ':fzf-tab:complete:cd:*' fzf-preview '/bin/ls -1Ah --color=always $realpath'
fi
# zsh-autosuggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=245'
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(
    "expand-or-complete"
    "pcomplete"
    "copy-earlier-word"
)
# magic-enter
export MAGIC_ENTER_GIT_COMMAND='git status -u .'
# MAGIC_ENTER_OTHER_COMMAND='ls -lh .'
if command -v eza &>/dev/null; then
  export MAGIC_ENTER_OTHER_COMMAND="eza -aglm --icons --group-directories-first"
else
  export MAGIC_ENTER_OTHER_COMMAND='ls -lAh --color=always'
fi
# MichaelAquilina/zsh-you-should-use
export YSU_MESSAGE_POSITION="after"
export YSU_MODE=ALL
# zsh-sweep
export zs_set_path=1
# keychain
zstyle :omz:plugins:keychain agents gpg,ssh
# autoenv
if [ ! -f /usr/local/lib/node_modules/@hyperupcall/autoenv/activate.sh ]; then
  # sudo npm install -g '@hyperupcall/autoenv'
fi
